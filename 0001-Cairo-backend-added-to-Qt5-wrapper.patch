From c9507c38913711b9497b5db03df6ed0eb6627f2f Mon Sep 17 00:00:00 2001
From: Paul Gideon Dann <pdgiddie@gmail.com>
Date: Wed, 4 Apr 2018 16:36:56 +0100
Subject: [PATCH 1/2] Cairo backend added to Qt5 wrapper

---
 qt5/src/CMakeLists.txt      | 15 ++++++++
 qt5/src/poppler-document.cc |  3 ++
 qt5/src/poppler-page.cc     | 70 +++++++++++++++++++++++++++++++++++++
 qt5/src/poppler-qt5.h       |  3 +-
 qt5/tests/CMakeLists.txt    |  5 +++
 5 files changed, 95 insertions(+), 1 deletion(-)

diff --git a/qt5/src/CMakeLists.txt b/qt5/src/CMakeLists.txt
index ae055a12..8cc1f540 100644
--- a/qt5/src/CMakeLists.txt
+++ b/qt5/src/CMakeLists.txt
@@ -5,6 +5,11 @@ include_directories(
   ${CMAKE_CURRENT_BINARY_DIR}
 )
 
+if (HAVE_CAIRO)
+  include_directories(${CAIRO_INCLUDE_DIRS})
+  add_definitions(${CAIRO_CFLAGS})
+endif (HAVE_CAIRO)
+
 set(CMAKE_C_VISIBILITY_PRESET hidden)
 set(CMAKE_CXX_VISIBILITY_PRESET hidden)
 set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)
@@ -36,6 +41,13 @@ set(poppler_qt5_SRCS
   QPainterOutputDev.cc
   poppler-version.cpp
 )
+if (HAVE_CAIRO)
+  set(poppler_qt5_SRCS ${poppler_qt5_SRCS}
+    ${CMAKE_SOURCE_DIR}/poppler/CairoOutputDev.cc
+    ${CMAKE_SOURCE_DIR}/poppler/CairoRescaleBox.cc
+    ${CMAKE_SOURCE_DIR}/poppler/CairoFontEngine.cc
+  )
+endif(HAVE_CAIRO)
 add_library(poppler-qt5 ${poppler_qt5_SRCS})
 set_target_properties(poppler-qt5 PROPERTIES VERSION 1.26.0 SOVERSION 1)
 if(MINGW AND BUILD_SHARED_LIBS)
@@ -43,6 +55,9 @@ if(MINGW AND BUILD_SHARED_LIBS)
     set_target_properties(poppler-qt5 PROPERTIES SUFFIX "-${POPPLER_QT5_SOVERSION}${CMAKE_SHARED_LIBRARY_SUFFIX}")
 endif()
 target_link_libraries(poppler-qt5 poppler Qt5::Core Qt5::Gui Qt5::Xml ${FREETYPE_LIBRARIES})
+if (HAVE_CAIRO)
+  target_link_libraries(poppler-qt5 ${CAIRO_LIBRARIES})
+endif (HAVE_CAIRO)
 if(MSVC)
 target_link_libraries(poppler-qt5 poppler ${poppler_LIBS})
 endif()
diff --git a/qt5/src/poppler-document.cc b/qt5/src/poppler-document.cc
index 87aee4cf..ae76325e 100644
--- a/qt5/src/poppler-document.cc
+++ b/qt5/src/poppler-document.cc
@@ -694,6 +694,9 @@ QSet<Document::RenderBackend> Document::availableRenderBackends()
 #endif
     ret << Document::QPainterBackend;
     ret << Document::ArthurBackend; // For backward compatibility
+#if defined(HAVE_CAIRO)
+    ret << Document::CairoBackend;
+#endif
     return ret;
 }
 
diff --git a/qt5/src/poppler-page.cc b/qt5/src/poppler-page.cc
index 31c60698..94389f9f 100644
--- a/qt5/src/poppler-page.cc
+++ b/qt5/src/poppler-page.cc
@@ -51,6 +51,7 @@
 
 #include <config.h>
 #include <poppler-config.h>
+#include <math.h>
 #include <PDFDoc.h>
 #include <Catalog.h>
 #include <Form.h>
@@ -64,6 +65,9 @@
 #    include <SplashOutputDev.h>
 #    include <splash/SplashBitmap.h>
 #endif
+#if defined(HAVE_CAIRO)
+#include <CairoOutputDev.h>
+#endif
 
 #include "poppler-private.h"
 #include "poppler-page-transition-private.h"
@@ -564,6 +568,69 @@ QImage Page::renderToImage(double xres, double yres, int xPos, int yPos, int w,
         img = tmpimg;
         break;
     }
+    case Poppler::Document::CairoBackend: {
+#if defined(HAVE_CAIRO)
+        CairoOutputDev *output_dev = new CairoOutputDev();
+        output_dev->startDoc(m_page->parentDoc->doc);
+        int buffer_width, buffer_height, rotate;
+        cairo_surface_t *surface;
+        cairo_t *cairo;
+
+        // If w or h are -1, that indicates the whole page, so we need to
+        // calculate how many pixels that corresponds to.  Otherwise, we can use w
+        // or h directly for our buffer size.
+        const QSize pageSize = this->pageSize();
+        if (w == -1) {
+            const double xscale = xres / 72.0;
+            const double width = pageSize.width();;
+            buffer_width = (int) ceil(width * xscale);
+        } else {
+            buffer_width = w;
+        }
+        if (h == -1) {
+            const double yscale = yres / 72.0;
+            const double height = pageSize.height();
+            buffer_height = (int) ceil(height * yscale);
+        } else {
+            buffer_height = h;
+        }
+
+        rotate = rotation + m_page->page->getRotate();
+
+        // FIXME: Okular never provides a rotation value, so I don't have any way
+        // of testing this right now.  The result is that subpixels are ordered
+        // incorrectly when the page is rotated.
+
+        //if (rotate == 90 || rotate == 270) {
+        //    const double temp = height;
+        //    height = width;
+        //    width = temp;
+        //}
+
+        img = QImage(buffer_width, buffer_height, QImage::Format_ARGB32);
+        img.fill(Qt::white);  // Never transparent
+
+        surface = cairo_image_surface_create_for_data(
+                      img.bits(),
+                      CAIRO_FORMAT_ARGB32,
+                      buffer_width, buffer_height,
+                      img.bytesPerLine());
+
+        cairo = cairo_create(surface);
+        output_dev->setCairo(cairo);
+
+        m_page->parentDoc->doc->displayPageSlice(
+            output_dev, m_page->index + 1, xres, yres, rotation, false, true,
+            false, xPos, yPos, w, h);
+
+        // Clean up
+        output_dev->setCairo(nullptr);
+        cairo_destroy(cairo);
+        cairo_surface_destroy(surface);
+        delete output_dev;
+#endif
+        break;
+    }
     }
 
     if (shouldAbortRenderCallback && shouldAbortRenderCallback(payload))
@@ -587,6 +654,9 @@ bool Page::renderToPainter(QPainter *painter, double xres, double yres, int x, i
 
         return renderToQPainter(&qpainter_output, painter, m_page, xres, yres, x, y, w, h, rotate, flags);
     }
+    case Poppler::Document::CairoBackend: {
+      return false;
+    }
     }
     return false;
 }
diff --git a/qt5/src/poppler-qt5.h b/qt5/src/poppler-qt5.h
index 6c167b65..f1672888 100644
--- a/qt5/src/poppler-qt5.h
+++ b/qt5/src/poppler-qt5.h
@@ -1167,7 +1167,8 @@ public:
     {
         SplashBackend, ///< Splash backend
         ArthurBackend, ///< \deprecated The old name of the QPainter backend
-        QPainterBackend = ArthurBackend ///< @since 20.11
+        QPainterBackend = ArthurBackend, ///< @since 20.11
+        CairoBackend   ///< Cairo backend
     };
 
     /**
diff --git a/qt5/tests/CMakeLists.txt b/qt5/tests/CMakeLists.txt
index 82ef2139..56860c32 100644
--- a/qt5/tests/CMakeLists.txt
+++ b/qt5/tests/CMakeLists.txt
@@ -6,6 +6,11 @@ include_directories(
   ${CMAKE_CURRENT_BINARY_DIR}
 )
 
+if (HAVE_CAIRO)
+  include_directories(${CAIRO_INCLUDE_DIRS})
+  add_definitions(${CAIRO_CFLAGS})
+endif (HAVE_CAIRO)
+
 macro(QT5_ADD_SIMPLETEST exe source)
   string(REPLACE "-" "" test_name ${exe})
   set(${test_name}_SOURCES
-- 
2.29.2

